{"remainingRequest":"D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\src\\views\\tool\\gen\\editTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\src\\views\\tool\\gen\\editTable.vue","mtime":1598162196932},{"path":"D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\workspace\\\\IdeaProjects\\\\RuoYi-vue-github\\\\ruoyi-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nvar _gen = require(\"@/api/tool/gen\");\n\nvar _type = require(\"@/api/system/dict/type\");\n\nvar _basicInfoForm = _interopRequireDefault(require(\"./basicInfoForm\"));\n\nvar _genInfoForm = _interopRequireDefault(require(\"./genInfoForm\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"GenEdit\",\n  components: {\n    basicInfoForm: _basicInfoForm.default,\n    genInfoForm: _genInfoForm.default\n  },\n  data: function data() {\n    return {\n      // 选中选项卡的 name\n      activeName: \"cloum\",\n      // 表格的高度\n      tableHeight: document.documentElement.scrollHeight - 245 + \"px\",\n      // 表列信息\n      cloumns: [],\n      // 字典信息\n      dictOptions: [],\n      // 表详细信息\n      info: {}\n    };\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n\n    var tableId = this.$route.query.tableId;\n\n    if (tableId) {\n      // 获取表详细信息\n      (0, _gen.getGenTable)(tableId).then(function (res) {\n        _this.cloumns = res.data.rows;\n        _this.info = res.data.info;\n      });\n      /** 查询字典下拉列表 */\n\n      (0, _type.optionselect)().then(function (response) {\n        _this.dictOptions = response.data;\n      });\n    }\n  },\n  methods: {\n    /** 提交按钮 */\n    submitForm: function submitForm() {\n      var _this2 = this;\n\n      var basicForm = this.$refs.basicInfo.$refs.basicInfoForm;\n      var genForm = this.$refs.genInfo.$refs.genInfoForm;\n      Promise.all([basicForm, genForm].map(this.getFormPromise)).then(function (res) {\n        var validateResult = res.every(function (item) {\n          return !!item;\n        });\n\n        if (validateResult) {\n          var genTable = Object.assign({}, basicForm.model, genForm.model);\n          genTable.columns = _this2.cloumns;\n          genTable.params = {\n            treeCode: genTable.treeCode,\n            treeName: genTable.treeName,\n            treeParentCode: genTable.treeParentCode\n          };\n          (0, _gen.updateGenTable)(genTable).then(function (res) {\n            _this2.msgSuccess(res.msg);\n\n            if (res.code === 200) {\n              _this2.close();\n            }\n          });\n        } else {\n          _this2.msgError(\"表单校验未通过，请重新检查提交内容\");\n        }\n      });\n    },\n    getFormPromise: function getFormPromise(form) {\n      return new Promise(function (resolve) {\n        form.validate(function (res) {\n          resolve(res);\n        });\n      });\n    },\n\n    /** 关闭按钮 */\n    close: function close() {\n      this.$store.dispatch(\"tagsView/delView\", this.$route);\n      this.$router.push({\n        path: \"/tool/gen\",\n        query: {\n          t: Date.now()\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}