{"remainingRequest":"D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\src\\router\\index.js","dependencies":[{"path":"D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\src\\router\\index.js","mtime":1598162196909},{"path":"D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workspace\\IdeaProjects\\RuoYi-vue-github\\ruoyi-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\workspace\\\\IdeaProjects\\\\RuoYi-vue-github\\\\ruoyi-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.constantRoutes = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"D:\\\\workspace\\\\IdeaProjects\\\\RuoYi-vue-github\\\\ruoyi-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/interopRequireWildcard\"));\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _vueRouter = _interopRequireDefault(require(\"vue-router\"));\n\nvar _layout = _interopRequireDefault(require(\"@/layout\"));\n\n_vue.default.use(_vueRouter.default);\n/* Layout */\n\n\n/**\r\n * Note: 路由配置项\r\n *\r\n * hidden: true                   // 当设置 true 的时候该路由不会再侧边栏出现 如401，login等页面，或者如一些编辑页面/edit/1\r\n * alwaysShow: true               // 当你一个路由下面的 children 声明的路由大于1个时，自动会变成嵌套的模式--如组件页面\r\n *                                // 只有一个时，会将那个子路由当做根路由显示在侧边栏--如引导页面\r\n *                                // 若你想不管路由下面的 children 声明的个数都显示你的根路由\r\n *                                // 你可以设置 alwaysShow: true，这样它就会忽略之前定义的规则，一直显示根路由\r\n * redirect: noRedirect           // 当设置 noRedirect 的时候该路由在面包屑导航中不可被点击\r\n * name:'router-name'             // 设定路由的名字，一定要填写不然使用<keep-alive>时会出现各种问题\r\n * meta : {\r\n    roles: ['admin','editor']    // 设置该路由进入的权限，支持多个权限叠加\r\n    title: 'title'               // 设置该路由在侧边栏和面包屑中展示的名字\r\n    icon: 'svg-name'             // 设置该路由的图标，对应路径src/icons/svg\r\n    breadcrumb: false            // 如果设置为false，则不会在breadcrumb面包屑中显示\r\n  }\r\n */\n// 公共路由\nvar constantRoutes = [{\n  path: '/redirect',\n  component: _layout.default,\n  hidden: true,\n  children: [{\n    path: '/redirect/:path*',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/redirect'));\n      });\n    }\n  }]\n}, {\n  path: '/login',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/login'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/404',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/error/404'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/401',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/error/401'));\n    });\n  },\n  hidden: true\n}, {\n  path: '',\n  component: _layout.default,\n  redirect: 'index',\n  children: [{\n    path: 'index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/index'));\n      });\n    },\n    name: '首页',\n    meta: {\n      title: '首页',\n      icon: 'dashboard',\n      noCache: true,\n      affix: true\n    }\n  }]\n}, {\n  path: '/user',\n  component: _layout.default,\n  hidden: true,\n  redirect: 'noredirect',\n  children: [{\n    path: 'profile',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/system/user/profile/index'));\n      });\n    },\n    name: 'Profile',\n    meta: {\n      title: '个人中心',\n      icon: 'user'\n    }\n  }]\n}, {\n  path: '/dict',\n  component: _layout.default,\n  hidden: true,\n  children: [{\n    path: 'type/data/:dictId(\\\\d+)',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/system/dict/data'));\n      });\n    },\n    name: 'Data',\n    meta: {\n      title: '字典数据',\n      icon: ''\n    }\n  }]\n}, {\n  path: '/gen',\n  component: _layout.default,\n  hidden: true,\n  children: [{\n    path: 'edit',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/tool/gen/editTable'));\n      });\n    },\n    name: 'GenEdit',\n    meta: {\n      title: '修改生成配置'\n    }\n  }]\n}];\nexports.constantRoutes = constantRoutes;\n\nvar _default = new _vueRouter.default({\n  mode: 'history',\n  // 去掉url中的#\n  scrollBehavior: function scrollBehavior() {\n    return {\n      y: 0\n    };\n  },\n  routes: constantRoutes\n});\n\nexports.default = _default;",null]}