{"remainingRequest":"D:\\workspace\\IdeaProjects\\RuoYi-Vue\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\workspace\\IdeaProjects\\RuoYi-Vue\\ruoyi-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\workspace\\IdeaProjects\\RuoYi-Vue\\ruoyi-ui\\src\\permission.js","dependencies":[{"path":"D:\\workspace\\IdeaProjects\\RuoYi-Vue\\ruoyi-ui\\src\\permission.js","mtime":1581484190874},{"path":"D:\\workspace\\IdeaProjects\\RuoYi-Vue\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\IdeaProjects\\RuoYi-Vue\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workspace\\IdeaProjects\\RuoYi-Vue\\ruoyi-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\workspace\\\\IdeaProjects\\\\RuoYi-Vue\\\\ruoyi-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:\\\\workspace\\\\IdeaProjects\\\\RuoYi-Vue\\\\ruoyi-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/objectSpread2\"));\n\nvar _router = _interopRequireDefault(require(\"./router\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _elementUi = require(\"element-ui\");\n\nvar _nprogress = _interopRequireDefault(require(\"nprogress\"));\n\nrequire(\"nprogress/nprogress.css\");\n\nvar _auth = require(\"@/utils/auth\");\n\n_nprogress.default.configure({\n  showSpinner: false\n});\n\nvar whiteList = ['/login', '/auth-redirect', '/bind', '/register'];\n\n_router.default.beforeEach(function (to, from, next) {\n  _nprogress.default.start();\n\n  if ((0, _auth.getToken)()) {\n    /* has token*/\n    if (to.path === '/login') {\n      next({\n        path: '/'\n      });\n\n      _nprogress.default.done();\n    } else {\n      if (_store.default.getters.roles.length === 0) {\n        // 判断当前用户是否已拉取完user_info信息\n        _store.default.dispatch('GetInfo').then(function (res) {\n          // 拉取user_info\n          var roles = res.roles;\n\n          _store.default.dispatch('GenerateRoutes', {\n            roles: roles\n          }).then(function (accessRoutes) {\n            // 测试 默认静态页面\n            // store.dispatch('permission/generateRoutes', { roles }).then(accessRoutes => {\n            // 根据roles权限生成可访问的路由表\n            _router.default.addRoutes(accessRoutes); // 动态添加可访问路由表\n\n\n            next((0, _objectSpread2.default)({}, to, {\n              replace: true\n            })); // hack方法 确保addRoutes已完成\n          });\n        }).catch(function (err) {\n          _store.default.dispatch('FedLogOut').then(function () {\n            _elementUi.Message.error(err);\n\n            next({\n              path: '/'\n            });\n          });\n        });\n      } else {\n        next(); // 没有动态改变权限的需求可直接next() 删除下方权限判断 ↓\n        // if (hasPermission(store.getters.roles, to.meta.roles)) {\n        //   next()\n        // } else {\n        //   next({ path: '/401', replace: true, query: { noGoBack: true }})\n        // }\n        // 可删 ↑\n      }\n    }\n  } else {\n    // 没有token\n    if (whiteList.indexOf(to.path) !== -1) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      next(\"/login?redirect=\".concat(to.path)); // 否则全部重定向到登录页\n\n      _nprogress.default.done();\n    }\n  }\n});\n\n_router.default.afterEach(function () {\n  _nprogress.default.done();\n});",null]}